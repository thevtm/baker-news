package post_block
import (
  "fmt"
  "net/url"

  "github.com/xeonx/timeago"
  "github.com/thevtm/baker-news/state"
	"github.com/thevtm/baker-news/app/components"
	"github.com/samber/lo"
)

func PostPageURL(post *state.Post) string {
  return fmt.Sprintf("/post/%d", post.ID)
}

templ Post(post *state.Post, author *state.User, vote_value state.VoteValue) {
  {{ url, _ := url.Parse(post.Url) }}
  {{ post_block_id := fmt.Sprintf("post-block-%d", post.ID) }}

  <div id={post_block_id} class="flex my-1">
    <div class="flex flex-col mx-2">
      {{ up := vote_value == state.VoteValueUp }}
      @components.VoteButton(components.VoteButtonParams{
        HxPost: "/post/vote",
        HxTarget: "#" + post_block_id,
        HxSwap: "outerHTML",
        HxVals: fmt.Sprintf(`{"post_id": %d, "vote_value": "%s"}`, post.ID,
          lo.If(up, state.VoteValueNone).Else(state.VoteValueUp)),
        Active: up,
        Icon: components.VoteIconUp(),
      })

      {{ down := vote_value == state.VoteValueDown }}
      @components.VoteButton(components.VoteButtonParams{
        HxPost: "/post/vote",
        HxTarget: "#" + post_block_id,
        HxSwap: "outerHTML",
        HxVals: fmt.Sprintf(`{"post_id": %d, "vote_value": "%s"}`, post.ID,
          lo.If(down, state.VoteValueNone).Else(state.VoteValueDown)),
        Active: down,
        Icon: components.VoteIconDown(),
      })
    </div>

    <div class="flex flex-col text-black">

      <div>
        <a href={ templ.SafeURL(post.Url) }>
          { post.Title }
        </a>

        if url != nil {
          <a href={ templ.SafeURL(fmt.Sprintf("%s://%s", url.Scheme, url.Host)) }
            class="pl-1 text-xs text-gray-500 self-end hover:underline">
            ({ url.Host })
          </a>
        }
      </div>

      <div class="flex text-xs text-gray-500">
        <span class="post-score">{ fmt.Sprint(post.Score) }</span>&nbsp;points by { fmt.Sprint(author.Username) }
        { timeago.English.Format(post.CreatedAt.Time) }
        <span class="mx-1">|</span>
        <a class="hover:underline" href={ templ.SafeURL(PostPageURL(post)) } hx-get={ PostPageURL(post) } hx-target="main" hx-push-url="true">{ fmt.Sprint(post.CommentsCount) } comments</a>
      </div>

    </div>
  </div>
}
