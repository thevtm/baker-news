// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package state

import (
	"database/sql/driver"
	"fmt"
)

type RoleType string

const (
	RoleTypeSystem RoleType = "system"
	RoleTypeAdmin  RoleType = "admin"
	RoleTypeUser   RoleType = "user"
	RoleTypeGuest  RoleType = "guest"
)

func (e *RoleType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RoleType(s)
	case string:
		*e = RoleType(s)
	default:
		return fmt.Errorf("unsupported scan type for RoleType: %T", src)
	}
	return nil
}

type NullRoleType struct {
	RoleType RoleType
	Valid    bool // Valid is true if RoleType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRoleType) Scan(value interface{}) error {
	if value == nil {
		ns.RoleType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.RoleType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRoleType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.RoleType), nil
}

type User struct {
	ID   int64
	Name string
	Role RoleType
}
